-- Create installations table
CREATE TABLE public.installations (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description TEXT NOT NULL,
  amount NUMERIC NOT NULL,
  installation_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT timezone('utc'::text, now()),
  user_id UUID REFERENCES auth.users(id),
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT timezone('utc'::text, now())
);

-- Enable Row Level Security
ALTER TABLE public.installations ENABLE ROW LEVEL SECURITY;

-- Create policies for installations
CREATE POLICY "Enable admin full access to installations" 
ON public.installations 
FOR ALL 
USING (EXISTS (
  SELECT 1 FROM profiles 
  WHERE profiles.id = auth.uid() AND profiles.role = 'admin'
));

CREATE POLICY "Users can view their own installations" 
ON public.installations 
FOR SELECT 
USING (user_id = auth.uid());

CREATE POLICY "Users can insert their own installations" 
ON public.installations 
FOR INSERT 
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Enable uploader insert access to installations" 
ON public.installations 
FOR INSERT 
WITH CHECK (EXISTS (
  SELECT 1 FROM profiles 
  WHERE profiles.id = auth.uid() AND profiles.role = ANY(ARRAY['admin', 'uploader'])
));

CREATE POLICY "Enable uploader read access to installations" 
ON public.installations 
FOR SELECT 
USING (EXISTS (
  SELECT 1 FROM profiles 
  WHERE profiles.id = auth.uid() AND profiles.role = ANY(ARRAY['admin', 'uploader'])
));

-- Create function to log installation activity
CREATE OR REPLACE FUNCTION public.log_installation_activity()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO activity_logs (
        action_type,
        table_name,
        item_description,
        amount,
        user_id
    )
    VALUES (
        TG_OP,
        TG_TABLE_NAME,
        NEW.description,
        NEW.amount,
        NEW.user_id
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create trigger for installation activity logging
CREATE TRIGGER log_installation_activity_trigger
    AFTER INSERT OR UPDATE OR DELETE ON public.installations
    FOR EACH ROW EXECUTE FUNCTION public.log_installation_activity();